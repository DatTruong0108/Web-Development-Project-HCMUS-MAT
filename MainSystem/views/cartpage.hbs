<div class="container mt-5 mb-5">
    <div class="card card-list mt-4">
        <div class="row ml-4 mr-4 mt-4">
            <div class="col-5 text-center">
                <h1 class="title-font" style="color: #000000;">PRODUCT</h1>
            </div>
            <div class="col-2 text-center">
                <h1 class="title-font" style="color: #000000;">PRICE</h1>
            </div>
            <div class="col-3 text-center">
                <h1 class="title-font" style="color: #000000;">QTY</h1>
            </div>
            <div class="col-2 text-center">
                <h1 class="title-font" style="color: #000000;">UNIT PRICE</h1>
            </div>
        </div>
        <hr class="line ml-4 mr-4">
        <div id="bookList" class="ml-4 mr-4">

        </div>
    </div>
    <div class="card card-list mt-4">
        <div class="row ml-4 mr-4 mt-4">
            <div class="col-5 text-center">
                <h1 class="title-font" style="color: #000000;">COUPON</h1>
            </div>
            <div class="col-5 text-center">
                <h1 class="title-font" style="color: #000000;">DETAIL</h1>
            </div>
            <div class="col-2 text-center">
                <h1 class="title-font" style="color: #000000;">VALUE</h1>
            </div>
        </div>
        <hr class="line ml-4 mr-4">
        <div id="couponList" class="ml-4 mr-4">

            {{#each coupons}}
            <div class="row custom-row-cp">
                <div class="col-5">
                    <div class="row d-flex align-items-center justify-content-center">
                        <div class="form-check mr-3 mb-4">
                            <input class="form-check-input custom-radio" id="cou{{id}}" name="couponRadio" type="radio" value="{{id}}">
                            <input type="hidden" id="rate{{id}}" value={{value}} />
                            <input type="hidden" id="minorder{{id}}" value={{minorder}} />
                            <input type="hidden" id="maxdiscount{{id}}" value={{maxdiscount}} />
                        </div>
                        <h1 class="namebook-font namebook" style="color: #000000;">{{name}}</h1>
                    </div>
                </div>
                <div class="col-5 text-center">
                    <div class="row d-flex align-items-center justify-content-center">
                        <div class="accordion" id="accordionPanelsStayOpenExample">
                            <div class="accordion-item">
                                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse"
                                    data-bs-target="#panelsStayOpen-collapse{{@index}}u" aria-expanded="false"
                                    aria-controls="panelsStayOpen-collapse{{@index}}u">
                                    View Detail
                                </button>

                                <div id="panelsStayOpen-collapse{{@index}}u" class="accordion-collapse collapse">
                                    <div class="accordion-body" style="color: #000000;">
                                        <br>
                                        Đơn hàng tối thiểu: {{minorder}}$<br>
                                        Khuyến mãi tối đa: {{maxdiscount}}$<br>
                                        Hạn sử dụng: {{formattedDate}}<br>
                                        Số lượng có hạn!
                                        </p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-2 text-center">
                    <p style="color: #000000;">{{value}}%</p>
                </div>
            </div>
            <hr class="line">
            {{/each}}
        </div>
    </div>
    <div class="row justify-content-between mt-4 mr-5">
        <div class="col-6">
            <div class="card card-total mt-4 pl-4 pt-4 pr-4 pb-2">
                <h5 class="mb-3" style="color: #000000;">Delivery Address</h5>
                <form>
                    <div class="form-group">
                        <label for="inputAddress" style="color: #000000;">Address</label>
                        <input autofocus type="text" class="form-control" id="inputAddress">
                    </div>

                    <div class="form-group">
                        <label for="inputPhone" style="color: #000000;">Phone Number</label>
                        <input type="tel" class="form-control" id="inputPhone">
                    </div>
                </form>
            </div>
        </div>
        <div class="col-6">
            <div class="card card-total mt-4">
                <div class="container">
                    <div class="row mt-4">
                        <div class="col-6">
                            <p class="checkout-font ml-5" style="color: #000000;">Subtotal</p>
                        </div>
                        <div class="col-6 text-right">
                            <p id="subtotal" class="checkout-font mr-5" style="color: #000000;">$0</p>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-6">
                            <p class="checkout-font ml-5" style="color: #000000;">Shipping fee</p>
                        </div>
                        <div class="col-6 text-right">
                            <p id="shipfree" class="checkout-font mr-5" style="color: #000000;">$2</p>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-6">
                            <p class="checkout-font ml-5" style="color: #000000;">Coupon</p>
                        </div>
                        <div class="col-6 text-right">
                            <p id="couponVal" class="checkout-font mr-5">$0</p>
                        </div>
                    </div>
                    <hr class="my-0">
                    <div class="row mt-3">
                        <div class="col-6">
                            <p class="checkout-font2 ml-5" style="color: #000000;">Total</p>
                        </div>
                        <div class="col-6 text-right">
                            <p id="total" class="checkout-font2 mr-5" style="color: #000000;">$0</p>
                        </div>
                    </div>
                    <div class="row justify-content-center mb-4 ml-5 mr-5">
                        <button type="button" class="btn btn-block btn-cart"><a style="color: #ffffff;">Check
                                out</a></button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    function parsePrice(priceString) {
        return parseFloat(priceString.replace('$', ''));
    }

    // Hàm lấy giá trị của cookie
    function getCookie(name) {
        const value = `; ${document.cookie}`;
        const parts = value.split(`; ${name}=`);
        if (parts.length === 2) {
            return decodeURIComponent(parts.pop().split(';').shift());  // Sử dụng decodeURIComponent để giải mã
        }
    }

    // Hàm thiết lập giá trị của cookie
    function setCookie(name, value) {
        const now = new Date();
        const expirationDate = new Date(now.getTime() + 30 * 24 * 60 * 60 * 1000); // Cookie sẽ tồn tại trong 30 ngày
        document.cookie = `${name}=${value}; expires=${expirationDate.toUTCString()}; path=/`;
    }

    // Hàm giải mã HTML entities
    function decodeEntities(encodedString) {
        const textArea = document.createElement('textarea');
        textArea.innerHTML = encodedString;
        return textArea.value;
    }
    document.addEventListener('DOMContentLoaded', function () {
        const coupon=`{{coupons.length}}`;
        console.log(coupon);
        const bookList = document.getElementById('bookList');
        const subtotalDisplay = document.getElementById('subtotal');
        const totalDisplay = document.getElementById('total');
        const couponDisplay = document.getElementById('couponVal');
        const shippingFeeDisplay = document.getElementById('shipfree');
        const shippingFee = parsePrice(shippingFeeDisplay.textContent);
        let radiobox; 
        if (parseInt(coupon)!=0){
            console.log("hi");
            radiobox = document.querySelectorAll('input[name="couponRadio"]');
            {{!-- radiobox.addEventListener('change', function () {
                    updateSubtotal();
                }); --}}
                document.querySelectorAll('input[name="couponRadio"]').forEach( (rad) => {
                    rad.addEventListener('change', function () {
                    updateSubtotal();
                });
                })
        }
        
        // Lấy giỏ hàng từ cookies
        let cart = getCookie("cart") ? JSON.parse(decodeEntities(getCookie("cart"))) : [];
        console.log(cart);

        function updateCart() {
            // Lưu giỏ hàng vào cookies
            setCookie("cart", encodeURIComponent(JSON.stringify(cart)));
            displayCart(); // Hiển thị lại giỏ hàng
        }

        function displayCart() {
            bookList.innerHTML = '';
            cart.forEach(book => {
                const card = document.createElement('div');
                card.className = 'row custom-row';
                card.innerHTML = `
                    <div class="col-5">
                        <div class="row d-flex align-items-center justify-content-center">
                            <div class="form-check mr-3 mb-4">
                                <input class="form-check-input custom-checkbox" type="checkbox" value="${book.name}">
                            </div>
                            <div class="mr-4">
                                <img src="${book.image}" class="img-thumbnail rounded" alt="${book.name}"
                                    style="width: 120px; height: 180px; object-fit: cover;">
                            </div>
                            <h1 class="namebook-font namebook" style="color: #000000;">${book.name}</h1>
                        </div>
                    </div>
                    <div class="col-2 text-center">
                        <p style="color: #000000;">$${book.price}</p>
                    </div>
                    <div class="col-3 text-center">
                        <div class="row text-center d-flex align-items-center justify-content-center">
                            <div class="input-group custom-input-group mr-3">
                                <div class="input-group-prepend">
                                    <button class="btn btn-outline-secondary minusBtn" type="button">-</button>
                                </div>
                                <input type="text" class="form-control text-center custom-input" style="color: #000000;" value="${book.quantity}" name="quantityInput" disabled>
                                <div class="input-group-append">
                                    <button class="btn btn-outline-secondary plusBtn" type="button">+</button>
                                </div>
                            </div>
                            <i class="fas fa-trash-alt trashBtn" style="color: red;"></i>
                        </div>
                    </div>
                    <div class="col-2 text-center">
                        <p style="color: #000000;">$${book.total.toFixed(2)}</p>
                    </div>
                `;
                bookList.appendChild(card);

                // Thêm hr vào sau div
                const hrElement = document.createElement('hr');
                hrElement.className = 'line';
                bookList.appendChild(hrElement);

                // Gán sự kiện cho nút "+" và "-" tương ứng với sách
                const plusBtn = card.querySelector('.plusBtn');
                const minusBtn = card.querySelector('.minusBtn');
                const quantityInput = card.querySelector('input[name="quantityInput"]');
                const trashBtn = card.querySelector('.trashBtn');
                const checkbox = card.querySelector('.custom-checkbox');


                plusBtn.addEventListener('click', function () {
                    book.quantity++;
                    quantityInput.value = book.quantity;
                    book.total = book.quantity * book.price;
                    updateCart();
                    updateSubtotal();
                });

                minusBtn.addEventListener('click', function () {
                    if (book.quantity > 1) {
                        book.quantity--;
                        quantityInput.value = book.quantity;
                        book.total = book.quantity * book.price;
                        updateCart();
                        updateSubtotal();
                    } else {
                        cart = cart.filter(item => item.name !== book.name);
                        updateCart();
                        updateSubtotal();
                    }
                });

                trashBtn.addEventListener('click', function () {
                    // Xóa sách khỏi giỏ hàng khi ấn nút Trash
                    cart = cart.filter(item => item.name !== book.name);
                    updateCart();
                    updateSubtotal();
                });

                checkbox.addEventListener('change', function () {
                    updateSubtotal();
                });


            });
        }

        function updateSubtotal() {
            const checkedBooks = cart.filter(book => {
                const checkbox = bookList.querySelector(`input[value="${book.name}"]`);
                return checkbox && checkbox.checked;
            });

            const checkedRadio = Array.from(document.querySelectorAll('input[type="radio"]:checked'));
            var minOrderInputId = "";
            var minOrderValue = 0;
            var maxDiscountInputId = "";
            var maxDiscountValue = 0;
            var rateInputID = "";
            var rateValue = 0;

            if (checkedRadio && checkedRadio.length > 0) {
                minOrderInputId = "minorder" + checkedRadio[0].value;
                minOrderValue = document.getElementById(minOrderInputId).value;
                maxDiscountInputId = "maxdiscount" + checkedRadio[0].value;
                maxDiscountValue = document.getElementById(maxDiscountInputId).value;
                rateInputID = "rate" + checkedRadio[0].value;
                rateValue = document.getElementById(rateInputID).value;
                // Now minOrderValue contains the value of the input element with the ID formed by concatenating "minorder" and the value of the checked radio button
            }

            console.log(minOrderValue);
            console.log(maxDiscountValue);
            console.log(rateValue);

            setCookie("list", JSON.stringify(checkedBooks));

            const subtotal = checkedBooks.reduce((total, book) => total + book.total, 0);
            setCookie("subtotal", subtotal);
            if (checkedRadio && checkedRadio.length > 0) {
                setCookie("couponID", checkedRadio[0].value);
                // Now minOrderValue contains the value of the input element with the ID formed by concatenating "minorder" and the value of the checked radio button
            }
            
            var total = subtotal + shippingFee;
            var couponDisVal = 0;
            if (total >= minOrderValue) {
                couponDisVal = Math.min(maxDiscountValue, total * parseFloat(rateValue) / 100);
                setCookie("couponDisVal", couponDisVal);
                total = total - couponDisVal;
            }
            console.log(total);
            subtotalDisplay.textContent = `$${subtotal.toFixed(2)}`;
            totalDisplay.textContent = `$${total.toFixed(2)}`;
            couponDisplay.textContent = `-$${couponDisVal.toFixed(2)}`;
            // Enable or disable the "Check Out" button based on whether any checkbox is checked
            const checkOutButton = document.querySelector('.btn-cart a');
            checkOutButton.disabled = checkedBooks.length === 0 || !isAddressProvided();
        }

        // Event listener for the "Check Out" button
        const checkOutButton = document.querySelector('.btn-cart a');
        checkOutButton.addEventListener('click', function () {
            const checkedBooks = cart.filter(book => {
                const checkbox = bookList.querySelector(`input[value="${book.name}"]`);
                return checkbox && checkbox.checked;
            });

            // Perform the check if at least one checkbox is checked
            if (checkedBooks.length === 0 || !isAddressProvided()) {
                if (checkedBooks.length === 0) {
                    alert('Please select at least one item to check out.');
                }
                else {
                    alert('Please enter address and phone number.');
                }

                return;
            }

            const inputAddress = document.getElementById('inputAddress').value;
            const inputPhone = document.getElementById('inputPhone').value;

            setCookie("address", inputAddress);
            setCookie("phone", inputPhone);
            setCookie("time", new Date().toISOString().split('T')[0]);

            // Proceed with the checkout process
            window.location.href = '/cart/order'; // Redirect to the checkout page
        });

        function isAddressProvided() {
            const inputAddress = document.getElementById('inputAddress');
            const inputPhone = document.getElementById('inputPhone');
            return inputAddress.value.trim() !== '' && inputPhone.value.trim() !== '';
        }

        function isAddressProvided() {
            const inputAddress = document.getElementById('inputAddress');
            const inputPhone = document.getElementById('inputPhone');
            return inputAddress.value.trim() !== '' && inputPhone.value.trim() !== '';
        }

        displayCart();
        updateSubtotal();
    });
</script>