 <div class="container-fluid">
        <div class="product-detail">
            <div class="row">
                <div class="col-md-5 d-flex align-items-center justify-content-center">
                    <img src="/{{book.image}}" alt="{{book.id}}" class="img-fluid">
                </div>
                <div class="col-md-7 product-info">
                    <h1>{{book.name}}</h1>
                    <p>By <strong>{{book.author}}</strong></p>
                    <hr> 
                    <p>{{book.description}}</p>
                    <div class="d-flex justify-content-between align-items-center">
                       <p style="font-size: 2em;"><strong>{{book.price}}</strong></p>
                       {{#unless admin}}
                       <div class="btn-group">
                        <button style="background-color: #ba3838;;" class="btn-add-to-cart btn " onclick="addToCart('{{book.id}}')">Add to Cart</button>
                        <button style="background-color: #ba3838;;" class="btn-add-to-cart btn " onclick="buyNow('{{book.id}}')">Buy Now</button>
                       </div>    
                       {{/unless}}     
                    </div>
                    <hr>
                    <p><strong>{{book.sold}}</strong> sold</p>
                </div>
            </div>
        </div>
    </div>

<h3 class="ml-4 mt-4">Related Books</h3>

<div id="relatedBooks" class="carousel slide mt-4" data-ride="carousel">
  <div class="carousel-inner">
    <!-- Vòng lặp qua mỗi nhóm 5 ảnh -->
    {{#each related}}
      {{#ifEquals @index}} <!-- Bắt đầu một carousel-item mới mỗi khi đến ảnh đầu tiên -->
        <div class="carousel-item {{#ifE @index 0}}active{{/ifE}}">
          <div class="d-flex flex-wrap justify-content-around">
      {{/ifEquals}}

      <!-- Hiển thị ảnh -->
      <div class="book-item card mb-4 shadow" >
        <div class="container" style="width: 100%; height: 200px; background-color: #f5f5f5; align-items: center; justify-content: center;">
          <a href="/book/{{id}}/view"><img src="/{{this.image}}" class="card-img-top" alt="{{this.name}}" style="width: 100%; height: 100%; object-fit: contain;">
          </a>
        </div>
        <div class="card-body d-flex flex-column">
          <h6 class="card-title"><a style="color: #000000;" href="/book/{{id}}/view">{{this.name}}</a></h6>
          <p class="card-title" style="color: #000000;">{{this.author}}</p>
          <div class="d-flex justify-content-between mt-auto">
            <a class="card-text pointer" style="color: #000000;">{{this.sold}} sold</a>
            <a class="card-text font-weight-bold" style="color: #000000;">{{this.price}}</a>
          </div>
        </div>
      </div>

      {{#ifEqual @index}} <!-- Đóng carousel-item mỗi khi đến ảnh thứ 5 -->
          </div>
        </div>
      {{/ifEqual}}
    {{/each}}
  </div>

  <!-- Nút điều hướng -->
  <a class="carousel-control-prev" href="#relatedBooks" role="button" data-slide="prev">
    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
    <span class="sr-only">Previous</span>
  </a>
  <a class="carousel-control-next" href="#relatedBooks" role="button" data-slide="next">
    <span class="carousel-control-next-icon" aria-hidden="true"></span>
    <span class="sr-only">Next</span>
  </a>
</div>  

<h3 class="ml-4 mt-4"> Reviews ({{reviews.length}}) </h3>

{{#if reviews}}
<div class="container">
<div class="col-12 col-lg-9 mt-3">
  <ul class="feedback-list pl-0" style="background-color:white;">
      {{#each reviews}}
                <li class="feedback-item p-2 mb-3">
                  <h5 class="feedback-author pl-2" style="color: #000000;">{{this.username}}</h5>
                  <div
                    class="feedback-item-content d-flex flex-column flex-lg-row align-items-start align-items-lg-center m-3"
                  >
                    <div
                      class="col-12 col-sm-6 d-flex flex-column align-items-start"
                    >
                      <div class="feedback-content" style="color: #000000;">{{this.feedback}}</div>
                      <div class="feedback-date mt-2 mt-sm-4">{{#dateToString
                          this.date
                        }}{{/dateToString}}</div>
                    </div>
                  </div>
                </li>
        {{/each}}
      </ul>
</div>
</div>
{{else}}
<div class="text-center"><h6>No reviews</h6></div>
{{/if}}

<script>
  function parsePrice(priceString) {
    return parseFloat(priceString.replace('$', ''));
  }

  // Hàm thêm sản phẩm vào giỏ hàng
  function addToCart(bookId) {
    let productName = "{{book.name}}";
    let productImage = "/{{book.image}}";
    let productPrice = parsePrice("{{book.price}}"); // Chuyển giá thành số thực

    // Lấy giỏ hàng từ cookies
    let cartString = getCookie("cart") || '[]';

    // Giải mã HTML entities trước khi thực hiện JSON.parse
    let decodedCartString = decodeEntities(cartString);

    // Thực hiện JSON.parse với chuỗi đã giải mã
    let cart = JSON.parse(decodedCartString);

    // Kiểm tra xem sản phẩm đã tồn tại trong giỏ hàng chưa
    let existingProductIndex = cart.findIndex(product => product.id === bookId);

    if (existingProductIndex !== -1) {
      // Nếu sản phẩm đã tồn tại, tăng số lượng lên
      cart[existingProductIndex].quantity++;
      cart[existingProductIndex].total = cart[existingProductIndex].quantity * productPrice;
    } else {
      // Nếu sản phẩm chưa tồn tại, thêm mới vào giỏ hàng
      var newProduct = {
        id: bookId,
        name: productName,
        image: productImage,
        price: productPrice,
        quantity: 1,
        total: productPrice * 1
      };
      cart.push(newProduct);
    }

    // Lưu giỏ hàng vào cookies
    setCookie("cart", JSON.stringify(cart));

    // Thông báo thành công
    alert("Product added to cart!");
  }

  function buyNow(bookID){
    let productName = "{{book.name}}";
    let productImage = "/{{book.image}}";
    let productPrice = parsePrice("{{book.price}}"); // Chuyển giá thành số thực
    let listString = getCookie("list") || '[]';

    // Giải mã HTML entities trước khi thực hiện JSON.parse
    let decodedListString = decodeEntities(listString);

    // Thực hiện JSON.parse với chuỗi đã giải mã
    let list = JSON.parse(decodedListString);

    // Kiểm tra xem sản phẩm đã tồn tại trong giỏ hàng chưa
    let existingProductIndex = list.findIndex(product => product.id === bookID);

    if (existingProductIndex !== -1) {
      // Nếu sản phẩm đã tồn tại, tăng số lượng lên
      list[existingProductIndex].quantity++;
      list[existingProductIndex].total = list[existingProductIndex].quantity * productPrice;
    } else {
      // Nếu sản phẩm chưa tồn tại, thêm mới vào giỏ hàng
      var newProduct = {
        id: bookID,
        name: productName,
        image: productImage,
        price: productPrice,
        quantity: 1,
        total: productPrice * 1
      };
      list.push(newProduct);
    }

    // Lưu giỏ hàng vào cookies
    setCookie("list", JSON.stringify(list));
    window.location.href = `/cart/buynow/${bookID}`;
  }

  // Hàm lấy giá trị của cookie
  function getCookie(name) {
    const value = `; ${document.cookie}`;
    const parts = value.split(`; ${name}=`);
    if (parts.length === 2) {
      return decodeURIComponent(parts.pop().split(';').shift());
    }
  }

  function setCookie(name, value) {
    const encodedValue = encodeURIComponent(value);
    document.cookie = `${name}=${encodedValue}; path=/`;
  }

  // Hàm giải mã HTML entities
  function decodeEntities(encodedString) {
    const textArea = document.createElement('textarea');
    textArea.innerHTML = encodedString;
    return textArea.value;
  }
</script>
