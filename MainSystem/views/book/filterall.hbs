<div class="col-md-12 d-flex">
    <div class="container mt-5">
        <div class="row mb-4" id="bookListContainer">
            {{#each book}}
            <div class="col-3 mb-4">
                <div class="card h-100" style="width: 14rem; margin-right: 12px;">
                    <div class="container"
                        style="width: 100%; height: 200px; background-color: #f5f5f5; align-items: center; justify-content: center;">
                        <a href="/book/{{this.id}}/view">
                            <img src="/{{this.image}}" class="card-img-top" alt="{{this.name}}"
                                style="width: 100%; height: 100%; object-fit: contain;">
                        </a>
                    </div>
                    <div class="card-body d-flex flex-column">
                        <h5 class="card-title"><a style="color: #000000;"
                                href="/book/{{this.id}}/view">{{this.name}}</a></h5>
                        <h6 class="card-title">{{this.author}}</h6>
                        <div class="d-flex justify-content-between mt-auto">
                            <a class="card-text pointer">{{this.sold}} sold</a>
                            <a class="card-text font-weight-bold">{{this.price}}</a>
                        </div>
                    </div>
                </div>
            </div>
            {{/each}}
        </div>

        <nav aria-label="Page navigation example">
            <div class="pagination justify-content-center" id="paginationContainer">
                <li class="page-item">
                    <a class="page-link custom-pagination-background custom-page-number" href="javascript:void(0);">
                        <span aria-hidden="true">&laquo;</span>
                    </a>
                </li>
                {{#each (range 1 totalPages)}}
                <li class="page-item">
                    <a class="page-link custom-pagination-background custom-page-number" href="javascript:void(0);">{{this}}</a>
                </li>
                {{/each}}
                <li class="page-item">
                    <a class="page-link custom-pagination-background custom-page-number" href="javascript:void(0);">
                        <span aria-hidden="true">&raquo;</span></a>
                </li>
            </div>
        </nav>
    </div>
</div>

<script>
    function bookPagin(page = 1){
        const url = `/book/filterAll/page/page=${page}`;
        fetch(url)
            .then(response => response.json())
            .then(data => {
                // Cập nhật danh sách sách trên trang
                updateBookList(data.book);

                // Cập nhật phân trang
                updatePagination(data.totalPages, data.currentPage);

                // Cập nhật đường dẫn mà không load lại trang
                const newUrl = `/book/filterAll/page/page=${page}`;
                history.pushState({ page: page }, '', newUrl);
            })
            .catch(error => console.error('Error:', error));
    }

    function updateBookList(books) {
        const bookListContainer = document.getElementById('bookListContainer');

        // Xóa tất cả các phần tử con trong container
        while (bookListContainer.firstChild) {
            bookListContainer.removeChild(bookListContainer.firstChild);
        }

        // Thêm sách mới vào container
        books.forEach(book => {
            const card = document.createElement('div');
            card.className = 'col-3 mb-4';
            card.innerHTML = `
                <div class="card h-100" style="width: 14rem; margin-right: 12px;">
                    <div class="container" style="width: 100%; height: 200px; background-color: #f5f5f5; align-items: center; justify-content: center;">
                        <a href="/book/${book.id}/view">
                            <img src="/${book.image}" class="card-img-top" alt="${book.name}" style="width: 100%; height: 100%; object-fit: contain;">
                        </a>
                    </div>
                    <div class="card-body d-flex flex-column">
                        <h5 class="card-title"><a style="color: #000000;" href="/book/${book.id}/view">${book.name}</a></h5>
                        <h6 class="card-title">${book.author}</h6>
                        <div class="d-flex justify-content-between mt-auto">
                            <a class="card-text pointer">${book.sold} sold</a>
                            <a class="card-text font-weight-bold">${book.price}</a>
                        </div>
                    </div>
                </div>
            `;
            bookListContainer.appendChild(card);
        });
    }

    function updatePagination(totalPages, currentPage) {
        const paginationContainer = document.querySelector('.pagination');

        // Xóa tất cả các phần tử con trong container
        while (paginationContainer.firstChild) {
            paginationContainer.removeChild(paginationContainer.firstChild);
        }

        // Thêm nút "Previous"
        const prevLi = document.createElement('li');
        prevLi.className = 'page-item';
        const prevLink = document.createElement('a');
        prevLink.className = 'page-link custom-pagination-background custom-page-number';
        prevLink.href = `javascript:void(0);`;
        prevLink.textContent = '«';
        const prePage = subtractOne(currentPage)
        prevLink.onclick = () => bookPagin(prePage);
        prevLi.appendChild(prevLink);
        paginationContainer.appendChild(prevLi);

        // Thêm các nút phân trang mới vào container
        for (let i = 1; i <= totalPages; i++) {
            const li = document.createElement('li');
            li.className = 'page-item';

            const link = document.createElement('a');
            link.className = 'page-link custom-pagination-background custom-page-number';
            link.href = `javascript:void(0);`;
            link.textContent = i;
            link.onclick = () => bookPagin(i);

            li.appendChild(link);
            paginationContainer.appendChild(li);
        }

        // Thêm nút "Next"
        const nextLi = document.createElement('li');
        nextLi.className = 'page-item';
        const nextLink = document.createElement('a');
        nextLink.className = 'page-link custom-pagination-background custom-page-number';
        nextLink.href = `javascript:void(0);`;
        nextLink.textContent = '»';
        nextLink.onclick = () => bookPagin(plusPage(currentPage, totalPages));
        nextLi.appendChild(nextLink);
        paginationContainer.appendChild(nextLi);
    }

    function subtractOne(currentPage) {
        if(currentPage === 1){
            return currentPage;
        }
        return currentPage - 1;
    }

    function plusPage(currentPage, totalPages) {
        if(currentPage === totalPages){
            return currentPage;
        }
        
        return currentPage + 1;
    }   
    
    document.addEventListener('DOMContentLoaded', function() {
        document.querySelectorAll('.page-link').forEach(link => {
            link.addEventListener('click', function(event) {
                event.preventDefault();
                const page = this.textContent.trim();
                bookPagin(page);
            });
        });
    });

</script>